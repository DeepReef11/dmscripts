#!/usr/bin/env bash

set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[  -f "${_path}/_dm-helper.sh" ]]; then
  # shellcheck disable=SC1090,SC1091
  source "${_path}/_dm-helper.sh"
else
  # shellcheck disable=SC1090
  echo "No helper-script found"
fi

source "$(get_config)"

saveSinglePageWget() {
	local filepath=$(file_explorer)  # TODO: a start path for archives could be added in config.
  local dirname=$(basename $clip)
	wget -E -H -k -K -nd -N -p -P "$filepath/$dirname" \
  $clip	
}

saveWebPage() {
	txtWgetSinglePage="Save single page with wget"
	choice=$(echo -e "${txtWgetSinglePage}\n" | ${DMENU} "$txtSaveWebPage: ")
	case $choice in
		$txtWgetSinglePage)
			echo "$txtWgetSinglePage"
			saveSinglePageWget
			;;
		esac
}

# This needs nextcloud client to be working to upload listfile to nextcloud.
# param:
# $listfile: filepath to local nextcloud directory. ex:
# fileList="${ncp_local_dir}/${ncp_downloadlists_dir}/${nc_youtube_list_file}"
 create_or_append_to_local_nc_filelist() {
  local local_nc_list_file="$1"
  local download_list_structure="$2"
  if [ -n "$local_nc_list_file" ] ; then
    if [ -z "$download_list_structure" ] ; then
      download_list_structure="# url${delimiter}path${delimiter}ID" 
    fi
  	touch "$local_nc_list_file"
  	line=$(head -n1 "$local_nc_list_file")
	  if [ "$line" != "$download_list_structure" ] ; then
      # append structure to beginning
		  echo "$download_list_structure
		  $(cat $local_nc_list_file)" > "$local_nc_list_file"
	  fi
	  touch "$nc_archive_video_history_file"
      local arr_top_choice=() 
	  readarray -t arr_top_choice < "$nc_archive_video_history_file"
	  filepath=$(file_explorer "$ncp_local_dir" "${arr_top_choice[@]}")

        addToPathHistory "$filepath" "$nc_archive_video_history_file" 3 "${arr_top_choice[@]}"
            
    filepath=$(string_remove_to_index_of_string "$filepath" "$ncp_local_dir")
    echo "$filepath"
    local id=""
    if [[ "$download_list_structure" == *"${delimiter}ID"*  ]] ||
      [[  "$download_list_structure" == "ID${delimiter}"* ]] ; then
      id=$(uuidgen)
      echo "$clip${delimiter}$filepath${delimiter}$id" >> "$local_nc_list_file"
    else
      echo "$clip${delimiter}$filepath" >> "$local_nc_list_file"
    fi
  else
    echo "local_nc_list_file argument required"
  fi
}
addToPathHistory() {
    local filepath="$1"
    local historyfile="$2"
    local historyLenght=$(($3 - 1))
    shift 3
    local arr_top_choice=("$@")
    local add_to_history=1
    for c in "${arr_top_choice[@]}";
      do
          if [ "$c" == "$filepath" ] ; then
              add_to_history=0
              break
          fi
      done    
    if [ "$add_to_history" -gt 0 ] ; then
        arr_top_choice=( "$filepath" "${arr_top_choice[@]:0:${historyLenght}}")
        printf "%s\n" "${arr_top_choice[@]}" > "$historyfile"
    fi
}
downloadVideo() {
	
  txtYtNcp="Yt-dl to Ncp"
	choice=$(echo -e "${txtYtNcp}\n" | ${DMENU} "$txtDownloadVideo: ")
	case $choice in 
    "$txtYtNcp")
			echo "$txtYtNcp"
      local listFile="${ncp_local_dir}/${ncp_downloadlists_dir}/${nc_youtube_list_file}"
      local list_structure="# url${delimiter}path" 
		  create_or_append_to_local_nc_filelist "$listFile"	"$list_structure"
 			;;
		esac

}


downloadFile() {
	
  txtWgetNc="wget to Nc"
	choice=$(echo -e "${txtWgetNc}\n" | ${DMENU} "$txtDownloadFile: ")
	case $choice in
		$txtWgetNc)
			echo "$txtWgetNc"
      local listFile="${ncp_local_dir}/${ncp_downloadlists_dir}/${nc_wget_list_file}"
      local list_structure="# url${delimiter}path" 
      create_or_append_to_local_nc_filelist "$listFile" "$list_structure"
			;;
		esac

}

main() {

	clip=$(xclip -sel c -o) || (echo "Nothing in clipboard. Copy url before using" && exit 1) 
echo "Clipboard: $clip" 
txtSaveWebPage="Save web page(s)"
txtDownloadVideo="Download video(s)"
txtDownloadFile="Download file(s)"
choice=$(echo -e "${txtSaveWebPage}\n${txtDownloadVideo}\n${txtDownloadFile}" | ${DMENU} "Archive options: ")

case $choice in
	$txtSaveWebPage)
		echo "$txtSaveWebPage"
		saveWebPage
		# wget -E -H -k -K -nd -N -p -P DESTINATIONDIRECTORY \
		# URL
		;;
	$txtDownloadVideo)
		echo "$txtDownloadVideo"
		downloadVideo
		;;
	$txtDownloadFile)
		echo "$txtDownloadFile"
    downloadFile
		;;
esac


#if [ "$choice" == "yt" ]; then
#  echo "$clip" >> ${HOME}/workspace/nextcloud/shared-folder/download-queue/youtube.txt
#  echo -e $(<${HOME}/workspace/nextcloud/Shared\ Folder/download-queue/youtube.txt)
#elif [ "$choice" == "wget" ]; then
#  echo "$clip" >> ${HOME}/workspace/nextcloud/shared-folder/download-queue/url.txt
#  echo -e $(<${HOME}/workspace/nextcloud/Shared\ Folder/download-queue/url.txt)
#fi
}
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
