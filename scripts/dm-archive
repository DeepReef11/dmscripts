#!/usr/bin/env bash

set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[  -f "${_path}/_dm-helper.sh" ]]; then
  # shellcheck disable=SC1090,SC1091
  source "${_path}/_dm-helper.sh"
else
  # shellcheck disable=SC1090
  echo "No helper-script found"
fi

source "$(get_config)"

saveSinglePageWget() {
	filepath=$(file_explorer)  # TODO: a start path for archives could be added in config. 
	wget -E -H -k -K -nd -N -p -P "$filepath/$dirname" \
  $clip	
}

saveWebPage() {
	txtWgetSinglePage="Save single page with wget"
	choice=$(echo -e "${txtWgetSinglePage}\n" | ${DMENU} "$txtSaveWebPage: ")
	case $choice in
		$txtWgetSinglePage)
			echo "$txtWgetSinglePage"
			saveSinglePageWget
			;;
		esac
}

# This needs nextcloud client to be working to upload listfile to nextcloud.
# param:
# $listfile: filepath to local nextcloud directory. ex:
# fileList="${ncp_local_dir}/${ncp_downloadlists_dir}/${nc_youtube_list_file}"
create_or_append_to_local_nc_filelist() {
  if [ -n "$listFile" ] ; then
  	downloadListsStructure="# url${delimiter}id${delimiter}path" 
  	touch "$listFile"
  	line=$(head -n1 "$listFile")
	  if [ "$line" != "$downloadListsStructure" ] ; then
		  echo "$downloadListsStructure
		  $(cat $listFile)" > "$listFile"
	  fi
    id=$(uuidgen)
	  filepath=$(file_explorer "$ncp_local_dir")  
    filepath=$(string_remove_to_index_of_string "$filepath" "$ncp_local_dir")
    echo "$clip${delimiter}$id${delimiter}$filepath" >> "$listFile"
  else
    echo "listFile argument required"
  fi
}

downloadVideo() {
	
  txtYtNcp="Yt-dl to Ncp"
	choice=$(echo -e "${txtYtNcp}\n" | ${DMENU} "$txtDownloadVideo: ")
	case $choice in
		$txtYtNcp)
			echo "$txtYtNcp"
      listFile="${ncp_local_dir}/${ncp_downloadlists_dir}/${nc_youtube_list_file}"
		  create_or_append_to_local_nc_filelist	
			;;
		esac

}


downloadFile() {
	
  txtWgetNc="wget to Nc"
	choice=$(echo -e "${txtWgetNc}\n" | ${DMENU} "$txtDownloadFile: ")
	case $choice in
		$txtWgetNc)
			echo "$txtWgetNc"
      listFile="${ncp_local_dir}/${ncp_downloadlists_dir}/${nc_wget_list_file}"
      create_or_append_to_local_nc_filelist
			;;
		esac

}

main() {

	clip=$(xclip -sel c -o) || (echo "Nothing in clipboard. Copy url before using" && exit 1) 
echo "Clipboard: $clip" 
txtSaveWebPage="Save web page(s)"
txtDownloadVideo="Download video(s)"
txtDownloadFile="Download file(s)"
choice=$(echo -e "${txtSaveWebPage}\n${txtDownloadVideo}\n${txtDownloadFile}" | ${DMENU} "Archive options: ")

case $choice in
	$txtSaveWebPage)
		echo "$txtSaveWebPage"
		saveWebPage
		# wget -E -H -k -K -nd -N -p -P DESTINATIONDIRECTORY \
		# URL
		;;
	$txtDownloadVideo)
		echo "$txtDownloadVideo"
		downloadVideo
		;;
	$txtDownloadFile)
		echo "$txtDownloadFile"
    downloadFile
		;;
esac


#if [ "$choice" == "yt" ]; then
#  echo "$clip" >> ${HOME}/workspace/nextcloud/shared-folder/download-queue/youtube.txt
#  echo -e $(<${HOME}/workspace/nextcloud/Shared\ Folder/download-queue/youtube.txt)
#elif [ "$choice" == "wget" ]; then
#  echo "$clip" >> ${HOME}/workspace/nextcloud/shared-folder/download-queue/url.txt
#  echo -e $(<${HOME}/workspace/nextcloud/Shared\ Folder/download-queue/url.txt)
#fi
}
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
